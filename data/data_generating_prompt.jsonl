{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]", "method": "str.capitalize"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.casefold\n[/TASK]\n[PYTHON]", "method": "str.casefold"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]", "method": "str.center"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.count\n[/TASK]\n[PYTHON]", "method": "str.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.encode\n[/TASK]\n[PYTHON]", "method": "str.encode"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.endswith\n[/TASK]\n[PYTHON]", "method": "str.endswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.expandtabs\n[/TASK]\n[PYTHON]", "method": "str.expandtabs"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.find\n[/TASK]\n[PYTHON]", "method": "str.find"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format\n[/TASK]\n[PYTHON]", "method": "str.format"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.format_map\n[/TASK]\n[PYTHON]", "method": "str.format_map"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.index\n[/TASK]\n[PYTHON]", "method": "str.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalnum\n[/TASK]\n[PYTHON]", "method": "str.isalnum"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isalpha\n[/TASK]\n[PYTHON]", "method": "str.isalpha"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isascii\n[/TASK]\n[PYTHON]", "method": "str.isascii"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdecimal\n[/TASK]\n[PYTHON]", "method": "str.isdecimal"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isdigit\n[/TASK]\n[PYTHON]", "method": "str.isdigit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isidentifier\n[/TASK]\n[PYTHON]", "method": "str.isidentifier"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.islower\n[/TASK]\n[PYTHON]", "method": "str.islower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isnumeric\n[/TASK]\n[PYTHON]", "method": "str.isnumeric"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isprintable\n[/TASK]\n[PYTHON]", "method": "str.isprintable"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isspace\n[/TASK]\n[PYTHON]", "method": "str.isspace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.istitle\n[/TASK]\n[PYTHON]", "method": "str.istitle"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.isupper\n[/TASK]\n[PYTHON]", "method": "str.isupper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.join\n[/TASK]\n[PYTHON]", "method": "str.join"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.ljust\n[/TASK]\n[PYTHON]", "method": "str.ljust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lower\n[/TASK]\n[PYTHON]", "method": "str.lower"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.lstrip\n[/TASK]\n[PYTHON]", "method": "str.lstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.maketrans\n[/TASK]\n[PYTHON]", "method": "str.maketrans"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.partition\n[/TASK]\n[PYTHON]", "method": "str.partition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removeprefix\n[/TASK]\n[PYTHON]", "method": "str.removeprefix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.removesuffix\n[/TASK]\n[PYTHON]", "method": "str.removesuffix"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.replace\n[/TASK]\n[PYTHON]", "method": "str.replace"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rfind\n[/TASK]\n[PYTHON]", "method": "str.rfind"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]", "method": "str.rindex"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rjust\n[/TASK]\n[PYTHON]", "method": "str.rjust"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]", "method": "str.rpartition"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rsplit\n[/TASK]\n[PYTHON]", "method": "str.rsplit"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.rstrip\n[/TASK]\n[PYTHON]", "method": "str.rstrip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]", "method": "str.split"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.splitlines\n[/TASK]\n[PYTHON]", "method": "str.splitlines"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.startswith\n[/TASK]\n[PYTHON]", "method": "str.startswith"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.strip\n[/TASK]\n[PYTHON]", "method": "str.strip"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.swapcase\n[/TASK]\n[PYTHON]", "method": "str.swapcase"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.title\n[/TASK]\n[PYTHON]", "method": "str.title"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.translate\n[/TASK]\n[PYTHON]", "method": "str.translate"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.upper\n[/TASK]\n[PYTHON]", "method": "str.upper"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nstr.zfill\n[/TASK]\n[PYTHON]", "method": "str.zfill"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]", "method": "list.append"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.clear\n[/TASK]\n[PYTHON]", "method": "list.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.copy\n[/TASK]\n[PYTHON]", "method": "list.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.count\n[/TASK]\n[PYTHON]", "method": "list.count"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.extend\n[/TASK]\n[PYTHON]", "method": "list.extend"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]", "method": "list.index"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]", "method": "list.insert"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]", "method": "list.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]", "method": "list.remove"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.reverse\n[/TASK]\n[PYTHON]", "method": "list.reverse"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\nlist.sort\n[/TASK]\n[PYTHON]", "method": "list.sort"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.clear\n[/TASK]\n[PYTHON]", "method": "dict.clear"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.copy\n[/TASK]\n[PYTHON]", "method": "dict.copy"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.fromkeys\n[/TASK]\n[PYTHON]", "method": "dict.fromkeys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.get\n[/TASK]\n[PYTHON]", "method": "dict.get"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.items\n[/TASK]\n[PYTHON]", "method": "dict.items"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.keys\n[/TASK]\n[PYTHON]", "method": "dict.keys"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.pop\n[/TASK]\n[PYTHON]", "method": "dict.pop"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.popitem\n[/TASK]\n[PYTHON]", "method": "dict.popitem"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.setdefault\n[/TASK]\n[PYTHON]", "method": "dict.setdefault"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.update\n[/TASK]\n[PYTHON]", "method": "dict.update"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.split\n[/TASK]\n[PYTHON]\ndef f(text):\n    words = text.split()\n    result = []\n    for i in range(len(words)):\n        if i % 2 == 0:\n            result.append(words[i][::-1])\n        else:\n            result.append(words[i].upper())\n    return ' '.join(result)\n[/PYTHON]\n[TEST]\nassert f(\"am7 fiDfd n\") == ??\nassert f(\"bnasadl\") == ??\nassert f(\"a j c n x X k\") == ??\nassert f(\"98 bask2 asoijdf9\") = ??\nassert f(\"\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.capitalize\n[/TASK]\n[PYTHON]\ndef f(text):\n    a = []\n    words = text.split(' ')\n    for i in range(len(words)):\n        if words[i][0].isdigit():\n            return 'no'\n        if i%2 == 0:\n            a.append(words[i].capitalize())\n        else:\n            a.append(words[i])\n    return ' '.join(a)\n[/PYTHON]\n[TEST]\nassert f(\"20xk flkawhf\") == ??\nassert f(\"lkw hj sfaibw fi 9\") == ??\nassert f(\"abbot 2929 mbpu\") == ??\nassert f(\"rotor zisxrs fh29nx\") == ??\nassert f(\"pxk 5 bxD 9\") == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rindex\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)\n[/PYTHON]\n[TEST]\nassert f('mnjs krupa', 'u') == ??\nassert f('kqwomn0xj', 'm') == ??\nassert f('qpfi jzm', 'j') == ??\nassert f('102x0zoq', '0') == ??\nassert f('nzu  ei,', 'e') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.rpartition\n[/TASK]\n[PYTHON]\ndef f(text, char):\n    if char in text:\n        pref, char, suff = text.rpartition(char)\n        suff = suff[:-len(char)] + char + suff[len(char):]\n        return suff + pref\n    return text\n[/PYTHON]\n[TEST]\nassert f('smswfwe-r', '-') == ??\nassert f(',wpzpppdl/', 'p') == ??\nassert f('9284701', '2') == ??\nassert f('nvizoh2ja', 'c') == ??\nassert f('aaa0a1', 'a') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.pop\n[/TASK]\n[PYTHON]\ndef f(names, num):\n    queue = names\n    while len(queue) > 1:\n        for _ in range(num):\n            queue.append(queue.pop(0))\n        queue.pop(0)\n    return queue.pop()\n[/PYTHON]\n[TEST]\nassert f(['aiwn', 'xke', 'mpwiy'], 2) == ??\nassert f(['y', 'z', 'cc', '2', '5', '.', 'zksdfjn'], 7) == ??\nassert f(['98bfaj', 'cn11', 'fakldj', 'tjasl', 'a'], 10) == ??\nassert f(['aghbvm'], 1) == ??\nassert f(['mnv', 'fjw', 'fnk'], 0) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.insert\n[/TASK]\n[PYTHON]\ndef f(text, position, value):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = length // 2\n    new_text = list(text)\n    new_text.insert(index, value)\n    return ''.join(new_text)\n[/PYTHON]\n[TEST]\nassert f('h grateful k', 3, 'h') == ??\nassert f('umjwi', -5, 'm') == ??\nassert f('coscifysu', 0, 'd') == ??\nassert f('fnmart', 4, 'o') == ??\nassert f('rzti', -1, 'a') == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.remove\n[/TASK]\n[PYTHON]\ndef f(array, elem):\n    array.reverse()\n    try:\n        while elem in array:\n            array.remove(elem)\n    finally:\n        array.reverse()\n    return array\n[/PYTHON]\n[TEST]\nassert f([-1, 2, 1, -8, 2], 2) == ??\nassert f([], 2) == ??\nassert f([1], 1) == ??\nassert f([3, 6, 4, -2, 5], 4) == ??\nassert f([3, 2, 1, 2, 7, 1], 1) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.append\n[/TASK]\n[PYTHON]\ndef f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.append(nums[i])\n    return nums\n[/PYTHON]\n[TEST]\nassert f([2, 6, 1, 3, 1]) == ??\nassert f([7, 1, 2, 6, 0, 2]) == ??\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ??\nassert f([0, 6, 2, -1, -2]) == ??\nassert f([-6, -2, 1, -3, 0, 1]) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}
{"text": "You will be given a function name between [TASK] and [/TASK] tags. Following the examples given, write a Python function that makes use of the given function and 5 test inputs for that function.\n\n[TASK]\nstr.center\n[/TASK]\n[PYTHON]\ndef f(text):\n    ls = list(text)\n    for i in range(1, len(ls) - 1):\n        ls.insert(i, '+')\n    return ''.join(ls).center((len(ls) - 1) * 2)\n[/PYTHON]\n[TEST]\nassert f('lynel') == ??\nassert f('nzoh') == ??\nassert f('u') == ??\nassert f('anfsoixz') == ??\nassert f('xzd') == ??\n[/TEST]\n\n[TASK]\nlist.index\n[/TASK]\n[PYTHON]\ndef f(nums, swap1, swap2):\n    i1 = nums.index(swap1)\n    i2 = nums.index(swap2)\n    nums[i1], nums[i2], nums[i1 + 1], nums[i2 + 1] = nums[i2], nums[i1], nums[i2 + 1], nums[i1 + 1]\n    return nums\n[/PYTHON]\n[TEST]\nassert f([6, 2, 1, 3, 4, 5], 3, 4) == ??\nassert f([1, 1, 5, 3, 1, 2], 1, 2) == ??\nassert f([1, 2, 1, 4, 1], 4, 2) == ??\nassert f([6, 2, 3, 1, 7, 5, 7], 3, 7) == ??\nassert f([2, 8, 8, 3, 8, 3, 9], 3, 2) == ??\n[/TEST]\n\n[TASK]\ndict.values\n[/TASK]\n[PYTHON]", "method": "dict.values"}